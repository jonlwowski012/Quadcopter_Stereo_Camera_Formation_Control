<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from quadrotor_downward_stereo_cam.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="quadrotor" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Included URDF Files -->
  <!-- Main quadrotor link -->
  <!-- Instantiate quadrotor_base_macro once (has no parameters atm) -->
  <link name="base_link">
    <inertial>
      <mass value="1.477"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.01152" ixy="0.0" ixz="0.0" iyy="0.01152" iyz="0.0" izz="0.0218"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_quadrotor_description/meshes/quadrotor/quadrotor_base.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://hector_quadrotor_description/meshes/quadrotor/quadrotor_base.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- Sonar height sensor -->
  <joint name="sonar_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="-0.16 0.0 -0.012"/>
    <parent link="base_link"/>
    <child link="sonar_link"/>
  </joint>
  <link name="sonar_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!--<box size="0.01 0.01 0.01" /> -->
        <mesh filename="package://hector_sensors_description/meshes/sonar_sensor/max_sonar_ez4.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="sonar_link">
    <sensor name="sonar" type="ray">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.349065850399</min_angle>
            <max_angle> 0.349065850399</max_angle>
          </horizontal>
          <vertical>
            <samples>3</samples>
            <resolution>1</resolution>
            <min_angle>-0.349065850399</min_angle>
            <max_angle> 0.349065850399</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.03</min>
          <max>3.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>sonar_height</topicName>
        <frameId>sonar_link</frameId>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Downward facing camera -->
  <!-- Stereo Camera -->
  <joint name="_left_camera_frame_joint" type="continuous">
    <!-- optical frame collocated with tilting DOF -->
    <origin rpy="0 1.5707 0" xyz="0.0 0 -0.2"/>
    <parent link="base_link"/>
    <child link="_left_camera_frame"/>
  </joint>
  <link name="_left_camera_frame">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length=".1" radius=".1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length=".0001" radius=".0001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="_left_camera_optical_frame_joint" type="fixed">
    <origin rpy="-1.5708 0.0 -1.5708" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <parent link="_left_camera_frame"/>
    <child link="_left_camera_optical_frame"/>
    <limit effort="300" lower="-2.61799387799" upper="2.6128806087" velocity="1"/>
    <dynamics damping="50" friction="1"/>
  </joint>
  <link name="_left_camera_optical_frame">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length=".1" radius=".1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length=".0001" radius=".0001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!--
  <transmission name="tran1">
	<type>transmission_interface/SimpleTransmission</type>
	<joint name="${name}_left_camera_optical_frame_joint">
		<hardwareInterface>EffortJointInterface</hardwareInterface>
	</joint>
	<actuator name="motor1">
		<mechanicalReduction>1</mechanicalReduction>
		<hardwareInterface>EffortJointInterface</hardwareInterface>
	</actuator>
</transmission>
-->
  <!--
<gazebo>
 <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>uav1/</robotNamespace>
 </plugin>
</gazebo>
-->
  <gazebo reference="_left_camera_frame">
    <sensor name="stereo_camera" type="multicamera">
      <!-- see MultiSenseSLPlugin.h for available modes -->
      <update_rate>30.0</update_rate>
      <camera name="left">
        <!-- Spec sheet says 80deg X 45deg @ 1024x544pix.  Based on feedback
             from teams, we're instead doing 80deg X 80deg @ 800x800pix. -->
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1].
               The stddev value of 0.007 is based on experimental data 
               from a camera in a Sandia hand pointed at a static scene
               in a couple of different lighting conditions.  -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <camera name="right">
        <pose>0 -0.1 0 0 0 0</pose>
        <!-- Spec sheet says 80deg X 45deg @ 1024x544pix.  Based on feedback
             from teams, we're instead doing 80deg X 80deg @ 800x800pix. -->
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1].
               The stddev value of 0.007 is based on experimental data 
               from a camera in a Sandia hand pointed at a static scene
               in a couple of different lighting conditions.  -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller">
        <cameraName></cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>_left_camera_optical_frame</frameName>
        <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
        <hackBaseline>0.1</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="_right_camera_frame_joint" type="fixed">
    <origin xyz="0.0 -0.1 -0.0"/>
    <parent link="_left_camera_frame"/>
    <child link="_right_camera_frame"/>
  </joint>
  <link name="_right_camera_frame">
    <!--    <inertial>
      <mass value="1e-5" />
      <origin xyz="-0.075493 -0.034966617 0.02574"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>-->
  </link>
  <joint name="_right_camera_optical_frame_joint" type="fixed">
    <origin rpy="-1.5708 0.0 -1.5708" xyz="0 0 0"/>
    <parent link="_right_camera_frame"/>
    <child link="_right_camera_optical_frame"/>
  </joint>
  <link name="_right_camera_optical_frame"/>
</robot>

